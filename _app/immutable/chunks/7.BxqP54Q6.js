var v=Object.freeze,W=Object.defineProperty;var y=(l,n)=>v(W(l,"raw",{value:v(n||l.slice())}));import{s as T,n as _,i as u,g as r,M as F,e as f,N as G,a as H,b as d,d as z,O as J,f as M,h as j,j as K,t as N,V as L,c as V,u as q,k as A,m as B,H as Q,A as R}from"./scheduler.DSZzDcX6.js";import{S as D,i as I,t as i,g as U,c as X,a as m,b as g,d as h,m as $,e as b}from"./index.Ck97c3H1.js";import{C as Y}from"./CodeLinks.Dgr_X-x7.js";import{e as w}from"./each.CNH9y-bx.js";import{ab as x,am as Z}from"./index.CdZlA5Fd.js";import{P as ss}from"./PeriodicTable.CduioAQd.js";function O(l,n,c){const t=l.slice();t[1]=n[c][0],t[2]=n[c][1];const s=Object.fromEntries(Z.map(function(...o){return l[0](t[2],...o)}));return t[3]=s,t}function P(l){let n,c=l[1]+"",t,s,a,o;return a=new ss({props:{color_overrides:l[3],labels:l[2]}}),{c(){n=f("h3"),t=G(c),s=H(),g(a.$$.fragment),this.h()},l(e){n=d(e,"H3",{id:!0,class:!0});var p=z(n);t=J(p,c),p.forEach(r),s=M(e),h(a.$$.fragment,e),this.h()},h(){j(n,"id",l[1]),j(n,"class","svelte-1yk3l7p")},m(e,p){u(e,n,p),K(n,t),u(e,s,p),$(a,e,p),o=!0},p:N,i(e){o||(i(a.$$.fragment,e),o=!0)},o(e){m(a.$$.fragment,e),o=!1},d(e){e&&(r(n),r(s)),b(a,e)}}}function ns(l){let n,c,t=w(Object.entries(x)),s=[];for(let o=0;o<t.length;o+=1)s[o]=P(O(l,t,o));const a=o=>m(s[o],1,1,()=>{s[o]=null});return{c(){for(let o=0;o<s.length;o+=1)s[o].c();n=_()},l(o){for(let e=0;e<s.length;e+=1)s[e].l(o);n=_()},m(o,e){for(let p=0;p<s.length;p+=1)s[p]&&s[p].m(o,e);u(o,n,e),c=!0},p(o,[e]){if(e&0){t=w(Object.entries(x));let p;for(p=0;p<t.length;p+=1){const k=O(o,t,p);s[p]?(s[p].p(k,e),i(s[p],1)):(s[p]=P(k),s[p].c(),i(s[p],1),s[p].m(n.parentNode,n))}for(U(),p=t.length;p<s.length;p+=1)a(p);X()}},i(o){if(!c){for(let e=0;e<t.length;e+=1)i(s[e]);c=!0}},o(o){s=s.filter(Boolean);for(let e=0;e<s.length;e+=1)m(s[e]);c=!1},d(o){o&&r(n),F(s,o)}}}function as(l){return[(c,t)=>[t,c[t]??"transparent"]]}class ts extends D{constructor(n){super(),I(this,n,as,ns,T,{})}}const es=l=>({}),C=l=>({slot:"example"}),os=l=>({}),E=l=>({slot:"code"});function ps(l){let n,c;return n=new ts({}),{c(){g(n.$$.fragment)},l(t){h(n.$$.fragment,t)},m(t,s){$(n,t,s),c=!0},i(t){c||(i(n.$$.fragment,t),c=!0)},o(t){m(n.$$.fragment,t),c=!1},d(t){b(n,t)}}}function ls(l){let n;const c=l[0].default,t=V(c,l,l[1],C),s=t||ps();return{c(){s&&s.c()},l(a){s&&s.l(a)},m(a,o){s&&s.m(a,o),n=!0},p(a,o){t&&t.p&&(!n||o&2)&&q(t,c,a,a[1],n?B(c,a[1],o,es):A(a[1]),C)},i(a){n||(i(s,a),n=!0)},o(a){m(s,a),n=!1},d(a){s&&s.d(a)}}}function cs(l){let n,c=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> PeriodicTable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'$lib'</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> element_color_schemes <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'$lib/colors'</span>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> elem_symbols <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'$lib/labels'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token each"><span class="token punctuation">{</span><span class="token keyword">#each</span> <span class="token language-javascript">Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>element_color_schemes<span class="token punctuation">)</span> </span><span class="token keyword">as</span> <span class="token language-javascript"><span class="token punctuation">[</span>id<span class="token punctuation">,</span> scheme<span class="token punctuation">]</span><span class="token punctuation">}</span></span></span>
  <span class="token language-javascript"><span class="token punctuation">{</span>@<span class="token keyword">const</span> color_overrides <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">fromEntries</span><span class="token punctuation">(</span>elem_symbols<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> scheme<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string">'transparent'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token language-javascript"><span class="token punctuation">{</span>id<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">{</span>id<span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PeriodicTable</span> <span class="token language-javascript"><span class="token punctuation">{</span>color_overrides<span class="token punctuation">}</span></span> <span class="token attr-name">labels=</span><span class="token language-javascript"><span class="token punctuation">{</span>scheme<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
<span class="token each"><span class="token punctuation">{</span><span class="token keyword">/each</span><span class="token punctuation">}</span></span>`,t;return{c(){n=new Q(!1),t=_(),this.h()},l(s){n=R(s,!1),t=_(),this.h()},h(){n.a=t},m(s,a){n.m(c,s,a),u(s,t,a)},p:N,d(s){s&&(r(t),n.d())}}}function rs(l){let n;const c=l[0].default,t=V(c,l,l[1],E),s=t||cs();return{c(){s&&s.c()},l(a){s&&s.l(a)},m(a,o){s&&s.m(a,o),n=!0},p(a,o){t&&t.p&&(!n||o&2)&&q(t,c,a,a[1],n?B(c,a[1],o,os):A(a[1]),E)},i(a){n||(i(s,a),n=!0)},o(a){m(s,a),n=!1},d(a){s&&s.d(a)}}}var S;function is(l){let n,c="Element Color Schemes",t,s,a,o;return a=new Y({props:{src:String.raw(S||(S=y([`<script>
import { PeriodicTable } from '$lib'
import { element_color_schemes } from '$lib/colors'
import { elem_symbols } from '$lib/labels'
<\/script>
{#each Object.entries(element_color_schemes) as [id, scheme]}
{@const color_overrides = Object.fromEntries(elem_symbols.map(((key) => [key, scheme[key] ?? 'transparent'])))}
<h3 {id}>{id}</h3>
<PeriodicTable {color_overrides} labels={scheme} />
{/each}`]))),meta:{Wrapper:"svelte-zoo/CodeExample.svelte",filename:"/src/routes/(demos)/element-color-schemes/+page.md",pkg:"elementari",repo:"https://github.com/elmtru/elementaru",hideStyle:!0,example:!0},$$slots:{code:[rs],example:[ls]},$$scope:{ctx:l}}}),{c(){n=f("h2"),n.textContent=c,t=H(),s=f("div"),g(a.$$.fragment)},l(e){n=d(e,"H2",{"data-svelte-h":!0}),L(n)!=="svelte-ub2x4z"&&(n.textContent=c),t=M(e),s=d(e,"DIV",{});var p=z(s);h(a.$$.fragment,p),p.forEach(r)},m(e,p){u(e,n,p),u(e,t,p),u(e,s,p),$(a,s,null),o=!0},p(e,[p]){const k={};p&2&&(k.$$scope={dirty:p,ctx:e}),a.$set(k)},i(e){o||(i(a.$$.fragment,e),o=!0)},o(e){m(a.$$.fragment,e),o=!1},d(e){e&&(r(n),r(t),r(s)),b(a)}}}function us(l,n,c){let{$$slots:t={},$$scope:s}=n;return l.$$set=a=>{"$$scope"in a&&c(1,s=a.$$scope)},[t,s]}class ms extends D{constructor(n){super(),I(this,n,us,is,T,{})}}const bs=Object.freeze(Object.defineProperty({__proto__:null,default:ms},Symbol.toStringTag,{value:"Module"}));export{ms as P,bs as _};
