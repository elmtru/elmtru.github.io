var W=Object.freeze,cn=Object.defineProperty;var z=(l,a)=>W(cn(l,"raw",{value:W(a||l.slice())}));import{s as D,e as h,b as $,d as M,g as k,h as nn,i as f,M as an,t as S,a as A,V as q,f as O,c as C,u as H,k as P,m as L,H as sn,n as T,A as tn}from"./scheduler.DSZzDcX6.js";import{S as I,i as V,t as u,g as en,c as on,a as m,b,d as v,m as y,e as w}from"./index.Ck97c3H1.js";import{C as F}from"./CodeLinks.Dgr_X-x7.js";import{e as j}from"./each.CNH9y-bx.js";import{f as ln}from"./index.CdZlA5Fd.js";import{E as pn}from"./ElementTile.CsfOooHI.js";function G(l,a,o){const s=l.slice();return s[1]=a[o],s[3]=o,s}function J(l){let a,o;return a=new pn({props:{bg_color:l[1],element:ln[l[3]],style:"width: 4em; margin: 0;"}}),{c(){b(a.$$.fragment)},l(s){v(a.$$.fragment,s)},m(s,n){y(a,s,n),o=!0},p:S,i(s){o||(u(a.$$.fragment,s),o=!0)},o(s){m(a.$$.fragment,s),o=!1},d(s){w(a,s)}}}function rn(l){let a,o,s=j(Array(27).fill(0).map(l[0])),n=[];for(let e=0;e<s.length;e+=1)n[e]=J(G(l,s,e));const t=e=>m(n[e],1,1,()=>{n[e]=null});return{c(){a=h("ol");for(let e=0;e<n.length;e+=1)n[e].c();this.h()},l(e){a=$(e,"OL",{class:!0});var c=M(a);for(let p=0;p<n.length;p+=1)n[p].l(c);c.forEach(k),this.h()},h(){nn(a,"class","svelte-1s8yyvp")},m(e,c){f(e,a,c);for(let p=0;p<n.length;p+=1)n[p]&&n[p].m(a,null);o=!0},p(e,[c]){if(c&1){s=j(Array(27).fill(0).map(e[0]));let p;for(p=0;p<s.length;p+=1){const _=G(e,s,p);n[p]?(n[p].p(_,c),u(n[p],1)):(n[p]=J(_),n[p].c(),u(n[p],1),n[p].m(a,null))}for(en(),p=s.length;p<n.length;p+=1)t(p);on()}},i(e){if(!o){for(let c=0;c<s.length;c+=1)u(n[c]);o=!0}},o(e){n=n.filter(Boolean);for(let c=0;c<n.length;c+=1)m(n[c]);o=!1},d(e){e&&k(a),an(n,e)}}}function un(l){return[()=>`hsl(${Math.random()*360}, ${Math.random()*50+50}%, ${Math.random()*50+50}%)`]}class kn extends I{constructor(a){super(),V(this,a,un,rn,D,{})}}function K(l,a,o){const s=l.slice();return s[0]=a[o],s[2]=o,s}function N(l){let a,o;return a=new pn({props:{bg_color:l[0],element:ln[l[2]],value:Math.random(),style:"width: 4em; margin: 0;",active:!0}}),{c(){b(a.$$.fragment)},l(s){v(a.$$.fragment,s)},m(s,n){y(a,s,n),o=!0},p:S,i(s){o||(u(a.$$.fragment,s),o=!0)},o(s){m(a.$$.fragment,s),o=!1},d(s){w(a,s)}}}function mn(l){let a,o,s=j(["red","green","blue","yellow","cyan","magenta","black","white"]),n=[];for(let e=0;e<8;e+=1)n[e]=N(K(l,s,e));const t=e=>m(n[e],1,1,()=>{n[e]=null});return{c(){a=h("ol");for(let e=0;e<8;e+=1)n[e].c();this.h()},l(e){a=$(e,"OL",{class:!0});var c=M(a);for(let p=0;p<8;p+=1)n[p].l(c);c.forEach(k),this.h()},h(){nn(a,"class","svelte-1s8yyvp")},m(e,c){f(e,a,c);for(let p=0;p<8;p+=1)n[p]&&n[p].m(a,null);o=!0},p(e,[c]){if(c&0){s=j(["red","green","blue","yellow","cyan","magenta","black","white"]);let p;for(p=0;p<8;p+=1){const _=K(e,s,p);n[p]?(n[p].p(_,c),u(n[p],1)):(n[p]=N(_),n[p].c(),u(n[p],1),n[p].m(a,null))}for(en(),p=8;p<8;p+=1)t(p);on()}},i(e){if(!o){for(let c=0;c<8;c+=1)u(n[c]);o=!0}},o(e){n=n.filter(Boolean);for(let c=0;c<8;c+=1)m(n[c]);o=!1},d(e){e&&k(a),an(n,e)}}}class fn extends I{constructor(a){super(),V(this,a,null,mn,D,{})}}const _n=l=>({}),Q=l=>({slot:"example"}),dn=l=>({}),R=l=>({slot:"code"}),gn=l=>({}),U=l=>({slot:"example"}),hn=l=>({}),X=l=>({slot:"code"});function $n(l){let a,o;return a=new kn({}),{c(){b(a.$$.fragment)},l(s){v(a.$$.fragment,s)},m(s,n){y(a,s,n),o=!0},i(s){o||(u(a.$$.fragment,s),o=!0)},o(s){m(a.$$.fragment,s),o=!1},d(s){w(a,s)}}}function bn(l){let a;const o=l[0].default,s=C(o,l,l[1],U),n=s||$n();return{c(){n&&n.c()},l(t){n&&n.l(t)},m(t,e){n&&n.m(t,e),a=!0},p(t,e){s&&s.p&&(!a||e&2)&&H(s,o,t,t[1],a?L(o,t[1],e,gn):P(t[1]),U)},i(t){a||(u(n,t),a=!0)},o(t){m(n,t),a=!1},d(t){n&&n.d(t)}}}function vn(l){let a,o=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ElementTile<span class="token punctuation">,</span> element_data <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'$lib'</span>

  <span class="token keyword">const</span> <span class="token function-variable function">rand_color</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hsl(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">360</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span> <span class="token operator">+</span> <span class="token number">50</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span> <span class="token operator">+</span> <span class="token number">50</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%)</span><span class="token template-punctuation string">\`</span></span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>
  <span class="token each"><span class="token punctuation">{</span><span class="token keyword">#each</span> <span class="token language-javascript"><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">27</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>rand_color<span class="token punctuation">)</span> </span><span class="token keyword">as</span> <span class="token language-javascript">bg_color<span class="token punctuation">,</span> idx<span class="token punctuation">}</span></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElementTile</span> <span class="token language-javascript"><span class="token punctuation">{</span>bg_color<span class="token punctuation">}</span></span> <span class="token attr-name">element=</span><span class="token language-javascript"><span class="token punctuation">{</span>element_data<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width: 4em; margin: 0;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token each"><span class="token punctuation">{</span><span class="token keyword">/each</span><span class="token punctuation">}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>`,s;return{c(){a=new sn(!1),s=T(),this.h()},l(n){a=tn(n,!1),s=T(),this.h()},h(){a.a=s},m(n,t){a.m(o,n,t),f(n,s,t)},p:S,d(n){n&&(k(s),a.d())}}}function yn(l){let a;const o=l[0].default,s=C(o,l,l[1],X),n=s||vn();return{c(){n&&n.c()},l(t){n&&n.l(t)},m(t,e){n&&n.m(t,e),a=!0},p(t,e){s&&s.p&&(!a||e&2)&&H(s,o,t,t[1],a?L(o,t[1],e,hn):P(t[1]),X)},i(t){a||(u(n,t),a=!0)},o(t){m(n,t),a=!1},d(t){n&&n.d(t)}}}function wn(l){let a,o;return a=new fn({}),{c(){b(a.$$.fragment)},l(s){v(a.$$.fragment,s)},m(s,n){y(a,s,n),o=!0},i(s){o||(u(a.$$.fragment,s),o=!0)},o(s){m(a.$$.fragment,s),o=!1},d(s){w(a,s)}}}function xn(l){let a;const o=l[0].default,s=C(o,l,l[1],Q),n=s||wn();return{c(){n&&n.c()},l(t){n&&n.l(t)},m(t,e){n&&n.m(t,e),a=!0},p(t,e){s&&s.p&&(!a||e&2)&&H(s,o,t,t[1],a?L(o,t[1],e,_n):P(t[1]),Q)},i(t){a||(u(n,t),a=!0)},o(t){m(n,t),a=!1},d(t){n&&n.d(t)}}}function En(l){let a,o=`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">{</span> ElementTile<span class="token punctuation">,</span> element_data <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'$lib'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>
  <span class="token each"><span class="token punctuation">{</span><span class="token keyword">#each</span> <span class="token language-javascript"><span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span> <span class="token string">'green'</span><span class="token punctuation">,</span> <span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token string">'yellow'</span><span class="token punctuation">,</span> <span class="token string">'cyan'</span><span class="token punctuation">,</span> <span class="token string">'magenta'</span><span class="token punctuation">,</span> <span class="token string">'black'</span><span class="token punctuation">,</span> <span class="token string">'white'</span><span class="token punctuation">]</span> </span><span class="token keyword">as</span> <span class="token language-javascript">bg_color<span class="token punctuation">,</span> idx<span class="token punctuation">}</span></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ElementTile</span> <span class="token language-javascript"><span class="token punctuation">{</span>bg_color<span class="token punctuation">}</span></span> <span class="token attr-name">element=</span><span class="token language-javascript"><span class="token punctuation">{</span>element_data<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token attr-name">value=</span><span class="token language-javascript"><span class="token punctuation">{</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width: 4em; margin: 0;<span class="token punctuation">"</span></span> <span class="token attr-name">active</span> <span class="token punctuation">/></span></span>
  <span class="token each"><span class="token punctuation">{</span><span class="token keyword">/each</span><span class="token punctuation">}</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>`,s;return{c(){a=new sn(!1),s=T(),this.h()},l(n){a=tn(n,!1),s=T(),this.h()},h(){a.a=s},m(n,t){a.m(o,n,t),f(n,s,t)},p:S,d(n){n&&(k(s),a.d())}}}function Mn(l){let a;const o=l[0].default,s=C(o,l,l[1],R),n=s||En();return{c(){n&&n.c()},l(t){n&&n.l(t)},m(t,e){n&&n.m(t,e),a=!0},p(t,e){s&&s.p&&(!a||e&2)&&H(s,o,t,t[1],a?L(o,t[1],e,dn):P(t[1]),R)},i(t){a||(u(n,t),a=!0)},o(t){m(n,t),a=!1},d(t){n&&n.d(t)}}}var Y,Z;function Tn(l){let a,o="<code>ElementTile.svelte</code> automatically changes text color to ensure high contrast with its background. If its background is transparent, it traverses up the DOM tree to find the first element with non-transparent background color. This an, of course, go wrong e.g. if the tile is absolutely positioned outside its parent element. In that case, pass an explicit <code>text_color</code> prop and <code>text_color_threshold={null}</code> to <code>ElementTile</code> to override the automatic color selection.",s,n,t,e,c,p="Displaying values instead of element names by passing the <code>value</code> prop.",_,g,d,E;return t=new F({props:{src:String.raw(Y||(Y=z([`<script>
import { ElementTile, element_data } from '$lib'
const rand_color = () => \`hsl(\${Math.random() * 360}, \${Math.random() * 50 + 50}%, \${Math.random() * 50 + 50}%)\`
<\/script>
<ol>
{#each Array(27).fill(0).map(rand_color) as bg_color, idx}
<ElementTile {bg_color} element={element_data[idx]} style="width: 4em; margin: 0;" />
{/each}
</ol>`],[`<script>
import { ElementTile, element_data } from '$lib'
const rand_color = () => \\\`hsl(\\$\\{Math.random() * 360}, \\$\\{Math.random() * 50 + 50}%, \\$\\{Math.random() * 50 + 50}%)\\\`
<\/script>
<ol>
{#each Array(27).fill(0).map(rand_color) as bg_color, idx}
<ElementTile {bg_color} element={element_data[idx]} style="width: 4em; margin: 0;" />
{/each}
</ol>`]))),meta:{Wrapper:"svelte-zoo/CodeExample.svelte",filename:"/src/routes/(demos)/element-tile/+page.md",pkg:"elementari",repo:"https://github.com/elmtru/elementaru",hideStyle:!0,example:!0,stackblitz:!0,code_above:!0},$$slots:{code:[yn],example:[bn]},$$scope:{ctx:l}}}),d=new F({props:{src:String.raw(Z||(Z=z([`<script>
import { ElementTile, element_data } from '$lib'
<\/script>
<ol>
{#each ['red', 'green', 'blue', 'yellow', 'cyan', 'magenta', 'black', 'white'] as bg_color, idx}
<ElementTile {bg_color} element={element_data[idx]} value={Math.random()} style="width: 4em; margin: 0;" active />
{/each}
</ol>`]))),meta:{Wrapper:"svelte-zoo/CodeExample.svelte",filename:"/src/routes/(demos)/element-tile/+page.md",pkg:"elementari",repo:"https://github.com/elmtru/elementaru",hideStyle:!0,example:!0,stackblitz:!0,code_above:!0},$$slots:{code:[Mn],example:[xn]},$$scope:{ctx:l}}}),{c(){a=h("p"),a.innerHTML=o,s=A(),n=h("div"),b(t.$$.fragment),e=A(),c=h("p"),c.innerHTML=p,_=A(),g=h("div"),b(d.$$.fragment)},l(r){a=$(r,"P",{"data-svelte-h":!0}),q(a)!=="svelte-107ondl"&&(a.innerHTML=o),s=O(r),n=$(r,"DIV",{});var i=M(n);v(t.$$.fragment,i),i.forEach(k),e=O(r),c=$(r,"P",{"data-svelte-h":!0}),q(c)!=="svelte-1b9l93n"&&(c.innerHTML=p),_=O(r),g=$(r,"DIV",{});var x=M(g);v(d.$$.fragment,x),x.forEach(k)},m(r,i){f(r,a,i),f(r,s,i),f(r,n,i),y(t,n,null),f(r,e,i),f(r,c,i),f(r,_,i),f(r,g,i),y(d,g,null),E=!0},p(r,[i]){const x={};i&2&&(x.$$scope={dirty:i,ctx:r}),t.$set(x);const B={};i&2&&(B.$$scope={dirty:i,ctx:r}),d.$set(B)},i(r){E||(u(t.$$.fragment,r),u(d.$$.fragment,r),E=!0)},o(r){m(t.$$.fragment,r),m(d.$$.fragment,r),E=!1},d(r){r&&(k(a),k(s),k(n),k(e),k(c),k(_),k(g)),w(t),w(d)}}}function jn(l,a,o){let{$$slots:s={},$$scope:n}=a;return l.$$set=t=>{"$$scope"in t&&o(1,n=t.$$scope)},[s,n]}class Sn extends I{constructor(a){super(),V(this,a,jn,Tn,D,{})}}const Dn=Object.freeze(Object.defineProperty({__proto__:null,default:Sn},Symbol.toStringTag,{value:"Module"}));export{Sn as P,Dn as _};
